[% WRAPPER wrapper.tt
highcharts = 1
tablesorter = [[0,0]]
%]

<script type="text/javascript">

$(function () {

	/**
	 * In order to synchronize tooltips and crosshairs, override the
	 * built-in events with handlers defined on the parent element.
	 */
	$('#container').bind('mousemove touchmove', function (e) {
		var chart,
			point,
			i;

		for (i = 0; i < Highcharts.charts.length; i = i + 1) {
			chart = Highcharts.charts[i];
			e = chart.pointer.normalize(e); // Find coordinates within the chart
			point = chart.series[0].searchPoint(e, true); // Get the hovered point

			if (point) {
				point.onMouseOver(); // Show the hover marker
				chart.tooltip.refresh(point); // Show the tooltip
				chart.xAxis[0].drawCrosshair(e, point); // Show the crosshair
			}
		}
	});
	/**
	 * Override the reset function, we don't need to hide the tooltips and crosshairs.
	 */
	Highcharts.Pointer.prototype.reset = function () {
		return undefined;
	};

	/**
	 * Synchronize zooming through the setExtremes event handler.
	 */
	function syncExtremes(e) {
		var thisChart = this.chart;

		if (e.trigger !== 'syncExtremes') { // Prevent feedback loop
			Highcharts.each(Highcharts.charts, function (chart) {
				if (chart !== thisChart) {
					if (chart.xAxis[0].setExtremes) { // It is null while updating
						chart.xAxis[0].setExtremes(e.min, e.max, undefined, false, { trigger: 'syncExtremes' });
					}
				}
			});
		}
	}

	// Get the data. The contents of the data file can be viewed at
	// https://github.com/highcharts/highcharts/blob/master/samples/data/activity.json
	$.getJSON('https://www.highcharts.com/samples/data/jsonp.php?filename=activity.json&callback=?', function (activity) {
		$.each(activity.datasets, function (i, dataset) {

			// Add X values
			dataset.data = Highcharts.map(dataset.data, function (val, j) {
				return [activity.xData[j], val];
			});

			$('<div class="chart">')
				.appendTo('#container')
				.highcharts({
					chart: {
						marginLeft: 40, // Keep all charts left aligned
						spacingTop: 20,
						spacingBottom: 20,
						zoomType: 'x'
					},
					title: {
						text: dataset.name,
						align: 'left',
						margin: 0,
						x: 30
					},
					credits: {
						enabled: false
					},
					legend: {
						enabled: false
					},
					xAxis: {
						crosshair: true,
						events: {
							setExtremes: syncExtremes
						},
						labels: {
							format: '{value} km'
						}
					},
					yAxis: {
						title: {
							text: null
						}
					},
					tooltip: {
						positioner: function () {
							return {
								x: this.chart.chartWidth - this.label.width, // right aligned
								y: -1 // align to title
							};
						},
						borderWidth: 0,
						backgroundColor: 'none',
						pointFormat: '{point.y}',
						headerFormat: '',
						shadow: false,
						style: {
							fontSize: '18px'
						},
						valueDecimals: dataset.valueDecimals
					},
					series: [{
						data: dataset.data,
						name: dataset.name,
						type: dataset.type,
						color: Highcharts.getOptions().colors[i],
						fillOpacity: 0.3,
						tooltip: {
							valueSuffix: ' ' + dataset.unit
						}
					}]
				});
		});
	});
});
						</script>

<form method="post" action="[% c.uri_for(c.action) %]">
  <div style="padding: 3px;">Search:
	<input type="text" name="m" id="search-input" value="[% m %]" style="width: 60px;">
	<input type="text" name="q" autofocus="autofocus" id="search-input" value="[% q %]" style="width: 240px;">
	<button type="submit" name="submit" value="yes" class="blue">Search</button>
	<button type="submit" name="csv" value="yes" class="green">CSV</button>
	<br>
  </div>
</form>

<div id="container" class="chart" style="float: center; width: 100%; margin: 0 auto;">
</div>

[%- END # WRAPPER %]
